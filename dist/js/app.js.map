{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/app.js","app.js","src/js/conf/Config.js","src/js/states/BootState.js","src/js/states/HairState.js","src/js/states/MenuState.js","src/js/states/PillState.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"Config","window","onload","document","title","TITLE","VERSION","game","Phaser","Game","WIDTH","SCALE","x","HEIGHT","y","CANVAS","getElementById","state","add","start","./conf/Config","./states/BootState","./states/HairState","./states/MenuState","./states/PillState",2,"module","Point",3,"preload","load","image","tilemap","Tilemap","TILED_JSON","bitmapFont","scale","scaleMode","ScaleManager","SHOW_ALL","create","stage","backgroundColor","this","text","world","centerX","centerY","font","fill","align","anchor","set","update","hasLoaded","destroy",4,"physics","startSystem","Physics","ARCADE","arcade","gravity","shavedPercent","shavedThreshold","enterTime","Date","getTime","timerMax","timer","timerRunning","background","map","addTilesetImage","layer","createLayer","resizeWorld","timerText","bitmapText","Math","ceil","fixToCamera","smoothed","successState","collide","blades","setText","time","elapsed","failState","render","floor","random","g","b","debug","body","bodyInfo","messages","rand","_this","setTimeout","../conf/Config",5,"menu","group","menuItems","label","transition","menuOffset","forEach","item","index","stateTransition","inputEnabled","input","enabled","useHandCursor","justPressed",6,"console","log"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Config = require('./conf/Config');\n\nwindow.onload = function windowLoaded() {\n    'use strict';\n    document.title = Config.TITLE + ' v' + Config.VERSION;\n\n    var game = new Phaser.Game(\n        Config.WIDTH * Config.SCALE.x,\n        Config.HEIGHT * Config.SCALE.y,\n        Phaser.CANVAS,\n        document.getElementById('viewport'),\n        null,\n        false,\n        false\n    );\n\n    game.state.add('boot', require('./states/BootState'));\n    game.state.add('menu', require('./states/MenuState'));\n    game.state.add('pill', require('./states/PillState'));\n    game.state.add('hair', require('./states/HairState'));\n    game.state.start('boot');\n};\n","var Config = require('./conf/Config');\n\nwindow.onload = function windowLoaded() {\n    'use strict';\n    document.title = Config.TITLE + ' v' + Config.VERSION;\n\n    var game = new Phaser.Game(\n        Config.WIDTH * Config.SCALE.x,\n        Config.HEIGHT * Config.SCALE.y,\n        Phaser.CANVAS,\n        document.getElementById('viewport'),\n        null,\n        false,\n        false\n    );\n\n    game.state.add('boot', require('./states/BootState'));\n    game.state.add('menu', require('./states/MenuState'));\n    game.state.add('pill', require('./states/PillState'));\n    game.state.add('hair', require('./states/HairState'));\n    game.state.start('boot');\n};\n","module.exports = {\n    'WIDTH': 120,\n    'HEIGHT': 68,\n    'TITLE': 'auto',\n    'VERSION': 'dev',\n    'SCALE': new Phaser.Point(8, 8)\n};\n","module.exports = {\n    'preload': function bootStatePreLoad(game) {\n        'use strict';\n        game.load.image('test-background', 'assets/menu/menu-background.png');\n\n        game.load.image('hair-background', 'assets/hair/hair-background.png');\n        game.load.image('hair-tileset', 'assets/hair/hair-tileset.png');\n        game.load.tilemap('hair-tilemap', 'assets/hair/hair-tilemap.json', null, Phaser.Tilemap.TILED_JSON);\n        game.load.image('hair-shaver', 'assets/hair/hair-shaver.png');\n        game.load.image('hair-blades', 'assets/hair/hair-blades.png');\n\n        game.load.bitmapFont('test-font', 'assets/ui/font.png', 'assets/ui/font.xml');\n\n        game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n    },\n    'create': function bootStateCreate(game) {\n        'use strict';\n        game.stage.backgroundColor = '#000';\n        this.text = this.game.add.text(\n            game.world.centerX,\n            game.world.centerY,\n            'Loading.',\n            {\n                'font': 'bold 60pt Arial',\n                'fill': '#fff',\n                'align': 'center'\n            }\n        );\n        this.text.anchor.set(0.5);\n    },\n    'update': function bootStateUpdate(game) {\n        'use strict';\n        if (game.load.hasLoaded) {\n            this.text.destroy();\n            game.state.start('menu');\n        }\n    }\n};\n","var Config = require('../conf/Config');\n\nmodule.exports = {\n    'create': function hairStateCreate(game) {\n        'use strict';\n\n        game.physics.startSystem(Phaser.Physics.ARCADE);\n        game.physics.arcade.gravity.y = 250;\n\n        this.shavedPercent = 0;\n        this.shavedThreshold = 50;\n\n        this.enterTime = new Date().getTime();\n        this.timerMax = 10;\n        this.timer = 0;\n        this.timerRunning = true;\n\n        this.background = game.add.image(0, 0, 'hair-background');\n        this.background.scale = Config.SCALE;\n        game.stage.backgroundColor = 'rgba(0, 0, 0)';\n\n        this.map = game.add.tilemap('hair-tilemap');\n        this.map.addTilesetImage('hair', 'hair-tileset');\n        this.layer = this.map.createLayer('Tile Layer 1');\n        this.layer.scale = Config.SCALE;\n        this.layer.resizeWorld();\n\n        this.timerText = this.game.add.bitmapText(\n            30,\n            10,\n            'test-font',\n            Math.ceil(this.timer / 1000),\n            12\n        );\n        this.timerText.scale = Config.SCALE;\n        this.timerText.fixToCamera = true;\n        this.timerText.smoothed = false;\n    },\n\n    'update': function hairStateUpdate(game) {\n        'use strict';\n        if (this.shavedPercent >= this.shavedThreshold) {\n            this.timerRunning = false;\n            this.successState();\n        }\n        if (this.timerRunning) {\n\n            game.physics.arcade.collide(this.blades, this.layer/*, function hairCollision(self, tile) {\n                console.log(tile);\n                if (tile.index === 1) {\n                    tile.alpha = 0;\n                }\n            }*/);\n\n            this.timerText.setText(Math.ceil(this.timerMax - (this.timer / 1000)));\n            this.timer += game.time.elapsed;\n            if (this.timer >= (this.timerMax * 1000)) {\n                this.timerRunning = false;\n                this.failState();\n            }\n        }\n    },\n\n    'render': function hairStateRender(game) {\n        'use strict';\n        // HOPE YOU LIKE SCREEN TEARING\n        var r = Math.floor(Math.random() * 255);\n        var g = Math.floor(Math.random() * 255);\n        var b = Math.floor(Math.random() * 255);\n        this.game.stage.backgroundColor = 'rgba(' + r + ', ' + g + ', ' + b + ')';\n        game.debug.body(this.blades);\n        game.debug.bodyInfo(this.blades, 32, 32);\n    },\n\n    'successState': function hairStateSucceed() {\n        'use strict';\n        var messages = [\n            'STUNNING',\n            'HOW BEAUTIFUL',\n            'SHIT, SON',\n            'GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG'\n        ];\n        var rand = Math.floor(Math.random() * messages.length);\n        this.timerText.setText(messages[rand]);\n    },\n\n    'failState': function hairStateFail() {\n        'use strict';\n        this.timerText.setText('FAILURE');\n        var _this = this;\n        setTimeout(function () {\n            _this.game.state.start('menu');\n        }, 2000);\n    }\n};\n","var Config = require('../conf/Config');\n\nmodule.exports = {\n    'create': function playStateCreate() {\n        'use strict';\n        // Load the background first\n        this.game.stage.backgroundColor = '#000';\n        this.background = this.game.add.image(0, 0, 'test-background');\n        this.background.scale = Config.SCALE;\n\n        var _this = this;\n        this.menu = this.game.add.group();\n        this.menuItems = [\n            { 'label': 'pills', 'transition': 'pill' },\n            { 'label': 'hair', 'transition': 'hair' }\n        ];\n        this.menuOffset = 10;\n\n        this.menuItems.forEach(function iterateMenuItems(item, index) {\n            var text = _this.game.add.bitmapText(10, (_this.menuOffset * index) * Config.SCALE.y, 'test-font', item.label, 12);\n            text.scale = Config.SCALE;\n            text.stateTransition = item.transition;\n            text.smoothed = false;\n            text.inputEnabled = true;\n            text.input.enabled = true;\n            text.input.useHandCursor = true;\n            _this.menu.add(text);\n        });\n    },\n\n    'update': function playStateUpdate() {\n        'use strict';\n        var _this = this;\n        this.menu.forEach(function (item) {\n            if (item.input.justPressed()) {\n                _this.game.state.start(item.stateTransition);\n            }\n        });\n    }\n};\n","module.exports = {\n    'create': function pillStateCreate() {\n        'use strict';\n        console.log('pill state');\n    }\n};\n"],"sourceRoot":"/source/"}